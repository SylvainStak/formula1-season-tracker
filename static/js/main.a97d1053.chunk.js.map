{"version":3,"sources":["components/Home.js","components/Schedule.js","components/Nav.js","components/Constructor.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","state","driverStandingsData","a","axios","get","then","response","setState","data","MRData","StandingsTable","StandingsLists","DriverStandings","this","renderDriverStandings","map","driver","className","position","src","Driver","driverId","width","height","alt","nationality","givenName","familyName","Constructors","constructorId","name","points","wins","length","scope","role","Component","Schedule","seasonSchedule","RaceTable","Races","renderSeasonSchedule","round","Circuit","circuitId","raceName","circuitName","date","time","substring","type","Location","locality","country","Nav","nextRaceData","constUri","to","style","textDecoration","Constructor","constructorStandingsData","ConstructorStandings","renderConstructorStandings","constructor","App","appUri","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a97d1053.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../Home.css';\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      driverStandingsData: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await axios.get('https://ergast.com/api/f1/current/driverstandings.json')\r\n      .then(response => {\r\n        this.setState({\r\n          driverStandingsData: response.data.MRData.StandingsTable.StandingsLists[0].DriverStandings,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      driverStandingsData,\r\n    } = this.state;\r\n\r\n    /* RENDER TABLE ROW FOR EACH DRIVER */\r\n    const renderDriverStandings = driverStandingsData.map(driver => (\r\n      <tr key={driver.Driver.driverId}>\r\n        <td className=\"align-middle\">{driver.position}</td>\r\n        <td className=\"align-middle\">\r\n          <img\r\n            src={`/formula1-season-tracker/drivers/${driver.Driver.driverId}.png`}\r\n            width=\"100\"\r\n            height=\"100\"\r\n            alt={driver.Driver.driverId}/>\r\n        </td>\r\n        <td className=\"align-middle\">\r\n          <img\r\n            src={`/formula1-season-tracker/flags/${driver.Driver.nationality}.png`}\r\n            width=\"32\"\r\n            height=\"32\"\r\n            className=\"flagimg\"\r\n            alt={driver.Driver.nationality}/>\r\n          {`${driver.Driver.givenName} ${driver.Driver.familyName}`}\r\n        </td>\r\n        <td className=\"align-middle\">\r\n          <img\r\n            src={`/formula1-season-tracker/constructors/${driver.Constructors[0].constructorId}.png`}\r\n            width=\"50\"\r\n            height=\"50\"\r\n            alt={driver.Constructors[0].constructorId}/>\r\n        </td>\r\n        <td className=\"align-middle\">{driver.Constructors[0].name}</td>\r\n        <td className=\"align-middle points-column\">{driver.points}</td>\r\n        <td className=\"align-middle points-column\">{driver.wins}</td>\r\n      </tr>\r\n    ));\r\n\r\n    return (\r\n      <>\r\n      {/* RENDER DRIVERS TABLE IF THERE IS AVAILABLE DATA */}\r\n      {driverStandingsData && driverStandingsData.length > 0 ? (\r\n        <>\r\n          <h1\r\n            className=\"text-center text-light mt-2\"\r\n          >\r\n            2021 DRIVER STANDINGS\r\n          </h1>\r\n          <div className=\"container mt-4\">\r\n            <table className=\"table text-light\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Pos.</th>\r\n                  <th scope=\"col\"></th>\r\n                  <th scope=\"col\">Driver</th>\r\n                  <th scope=\"col\"></th>\r\n                  <th scope=\"col\">Constructor</th>\r\n                  <th scope=\"col\">Points</th>\r\n                  <th scope=\"col\">Wins</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {renderDriverStandings}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      ):(\r\n        <>\r\n        {/* LOADING SPINNER */}\r\n          <div className=\"text-center mt-5\">\r\n            <div className=\"spinner-border text-warning\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../Schedule.css';\r\n\r\nclass Schedule extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      seasonSchedule: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await axios.get('https://ergast.com/api/f1/current.json')\r\n      .then(response => {\r\n        this.setState({\r\n          seasonSchedule: response.data.MRData.RaceTable.Races,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      seasonSchedule,\r\n    } = this.state;\r\n\r\n    /* RENDER INFO BANNER FOR EACH RACE IN THE SCHEDULE */\r\n    const renderSeasonSchedule = seasonSchedule.map(round => (\r\n      <div\r\n        className=\"schedule-item bg-warning d-flex\"\r\n        key={round.Circuit.circuitId}>\r\n        <div className=\"circuit-img-container\">\r\n          <img\r\n            src={`/formula1-season-tracker/circuits/${round.Circuit.circuitId}.png`}\r\n            width=\"154.5\"\r\n            height=\"116.25\"\r\n            alt={round.Circuit.circuitId}\r\n            className=\"mt-1\" />\r\n        </div>\r\n        <div className=\"info-container mt-2 ml-2\">\r\n          <div>{`Round ${round.round}`}</div>\r\n          <div><span className=\"race-name\">{round.raceName}</span></div>\r\n          <div><em>{round.Circuit.circuitName}</em></div>\r\n          <div><em>{`${round.date} / ${round.time.substring(0,5)} (UTC)`}</em></div>\r\n          <div>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mt-1 results-button disabled\"\r\n            >\r\n              Race Results &gt;\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"ml-auto d-flex mr-4\">\r\n          <div className=\"mt-3 mr-2 race-country-name\">\r\n            {`${round.Circuit.Location.locality} (${round.Circuit.Location.country})`}\r\n          </div>\r\n          <div>\r\n          <img\r\n            src={`/formula1-season-tracker/flags/scheduleflags/${round.Circuit.Location.country}.png`}\r\n            alt={round.Circuit.circuitId}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n    return (\r\n      <>\r\n        {/* RENDER SEASON SCHEDULE IF THERE IS AVAILABLE DATA */}\r\n        {seasonSchedule && seasonSchedule.length > 0 ? (\r\n          <>\r\n            <h1\r\n              className=\"text-center text-light mt-2\"\r\n            >\r\n              2021 SEASON SCHEDULE\r\n            </h1>\r\n            <div className=\"container\">\r\n              {renderSeasonSchedule}\r\n            </div>\r\n          </>\r\n        ) :\r\n        (\r\n          <>\r\n          {/* LOADING SPINNER */}\r\n            <div className=\"text-center mt-5\">\r\n              <div className=\"spinner-border text-warning\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Schedule;","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../Nav.css';\r\n\r\nclass Nav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      nextRaceData: null,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await axios.get('https://ergast.com/api/f1/current/next.json')\r\n      .then(response => {\r\n        this.setState({\r\n          nextRaceData: response.data.MRData.RaceTable.Races[0],\r\n        });\r\n      });\r\n  }\r\n\r\n  render() { \r\n    const {\r\n      constUri,\r\n    } = this.props;\r\n\r\n    const {\r\n      nextRaceData,\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"container-fluid link-nav-bar\">\r\n          <div className=\"row link-nav-bar-row\">\r\n              {/* LINK --> DRIVERS STANDINGS */}\r\n              <Link\r\n                to={`${constUri}`}\r\n                style={{ textDecoration: 'none' }}\r\n                className=\"col-xs-4 col-md-2 bg-warning text-dark text-center\"\r\n              >\r\n                Driver Standings\r\n              </Link>\r\n\r\n              {/* LINK --> CONSTRUCTORS STANDINGS */}\r\n              <Link\r\n                to={`${constUri}/constructor`}\r\n                style={{ textDecoration: 'none' }}\r\n                className=\"col-xs-4 col-md-2 bg-warning text-dark text-center midlink\"\r\n              >\r\n                Constructor Standings\r\n              </Link>\r\n\r\n              {/* LINK --> SCHEDULE / RACE RESULTS */}\r\n              <Link\r\n                to={`${constUri}/schedule`}\r\n                style={{ textDecoration: 'none' }}\r\n                className=\"col-xs-4 col-md-2 bg-warning text-dark text-center\"\r\n              >\r\n                Schedule\r\n              </Link>\r\n\r\n              {/* NEXT RACE DATA */}\r\n              <div\r\n                className=\"col-xs-12 col-md-6 bg-dark text-light d-flex justify-content-around\"\r\n              >\r\n                <div className=\"mt-3\">Next Race:</div>  \r\n                {nextRaceData !== null ? \r\n                (\r\n                  <>\r\n                  <div>\r\n                    <div className=\"mt-1\">{`${nextRaceData.raceName}, ${nextRaceData.Circuit.circuitName}`}</div> \r\n                    <div>{`${nextRaceData.date} / ${nextRaceData.time.substring(0,5)} (UTC)`}</div>\r\n                  </div>\r\n                  <div className=\"mt-1\">\r\n                    <div>\r\n                      {`${nextRaceData.Circuit.Location.locality} (${nextRaceData.Circuit.Location.country})`}\r\n                    </div>\r\n                    <div>\r\n                    <img\r\n                      src={`/formula1-season-tracker/flags/scheduleflags/${nextRaceData.Circuit.Location.country}.png`}\r\n                      width=\"50\"\r\n                      height=\"50\"\r\n                      alt={nextRaceData.Circuit.Location.country}/>\r\n                    </div>\r\n                  </div>\r\n                  </>\r\n                ) : \r\n                (\r\n                  <>\r\n                    {/* LOADING SPINNER */}\r\n                    <div className=\"spinner-border text-warning mt-3\" role=\"status\">\r\n                      <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                  </>\r\n                )\r\n                }\r\n              </div>\r\n          </div>  \r\n        </div> \r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Constructor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      constructorStandingsData: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await axios.get('https://ergast.com/api/f1/current/constructorstandings.json')\r\n    .then(response => {\r\n      this.setState({\r\n        constructorStandingsData: response.data.MRData.StandingsTable.StandingsLists[0].ConstructorStandings,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      constructorStandingsData,\r\n    } = this.state;\r\n\r\n    /* RENDER TABLE ROW FOR EACH CONSTRUCTOR */\r\n    const renderConstructorStandings = constructorStandingsData.map(constructor => (\r\n      <tr key={constructor.Constructor.constructorId}>\r\n        <td className=\"align-middle\">{constructor.position}</td>\r\n        <td className=\"align-middle\">\r\n          <img\r\n            src={`/formula1-season-tracker/constructors/${constructor.Constructor.constructorId}.png`}\r\n            width=\"50\"\r\n            height=\"50\"\r\n            alt={constructor.Constructor.constructorId}/>\r\n        </td>\r\n        <td className=\"align-middle\">{constructor.Constructor.name}</td>\r\n        <td className=\"align-middle\">\r\n          <img\r\n            src={`/formula1-season-tracker/cars/${constructor.Constructor.constructorId}.png`}\r\n            height=\"50\"\r\n            alt={constructor.Constructor.constructorId}/>\r\n        </td>\r\n        <td className=\"align-middle points-column\">{constructor.points}</td>\r\n        <td className=\"align-middle points-column\">{constructor.wins}</td>\r\n      </tr>\r\n    ));\r\n\r\n    return (\r\n      <>\r\n        {/* RENDER CONSTRUCTORS TABLE IF THERE IS AVAILABLE DATA */}\r\n        {constructorStandingsData && constructorStandingsData.length > 0 ? (\r\n        <>\r\n          <h1\r\n            className=\"text-center text-light mt-2\"\r\n          >\r\n            2021 CONSTRUCTOR STANDINGS\r\n          </h1>\r\n          <div className=\"container mt-4\">\r\n            <table className=\"table text-light\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Pos.</th>\r\n                  <th scope=\"col\"></th>\r\n                  <th scope=\"col\">Constructor</th>\r\n                  <th scope=\"col\"></th>\r\n                  <th scope=\"col\">Points</th>\r\n                  <th scope=\"col\">Wins</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {renderConstructorStandings}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      ):(\r\n        <>\r\n          {/* LOADING SPINNER */}\r\n          <div className=\"text-center mt-5\">\r\n            <div className=\"spinner-border text-warning\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Constructor;","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport Schedule from './components/Schedule';\nimport Nav from './components/Nav';\nimport Constructor from './components/Constructor';\n\nfunction App() {\n  const appUri = '/formula1-season-tracker';\n\n  return (\n    <>\n      <Router>\n        <Nav constUri={appUri}/>\n        <Switch>\n          <Route path={`${appUri}`} exact component={Home} />\n          <Route path={`${appUri}/constructor`} exact component={Constructor} />\n          <Route path={`${appUri}/schedule`} exact component={Schedule} />          \n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}