{"version":3,"sources":["components/Home.js","components/Schedule.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","state","driverStandingsData","a","this","getDriverStandingsOverRounds","axios","get","then","response","setState","data","MRData","StandingsTable","StandingsLists","DriverStandings","console","log","renderDriverStandings","map","driver","className","position","src","Driver","driverId","width","height","alt","nationality","givenName","familyName","Constructors","constructorId","name","points","length","scope","role","Component","Schedule","Nav","constUri","to","style","textDecoration","App","appUri","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f99090e8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../Home.css';\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      driverStandingsData: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.getDriverStandingsOverRounds();\r\n  }\r\n\r\n  async getDriverStandingsOverRounds() {\r\n    await axios.get('https://ergast.com/api/f1/current/driverstandings.json')\r\n      .then(response => {\r\n        this.setState({\r\n          driverStandingsData: response.data.MRData.StandingsTable.StandingsLists[0].DriverStandings,\r\n        });\r\n        console.log(response.data.MRData.StandingsTable.StandingsLists[0].DriverStandings);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      driverStandingsData,\r\n    } = this.state;\r\n\r\n    const renderDriverStandings = driverStandingsData.map(driver => (\r\n      <tr key={driver.Driver.driverId}>\r\n        <td className=\"align-middle\">{driver.position}</td>\r\n        <td className=\"align-middle\">\r\n          <img\r\n            src={`/formula1-season-tracker/drivers/${driver.Driver.driverId}.png`}\r\n            width=\"100\"\r\n            height=\"100\"\r\n            alt={driver.Driver.driverId}/>\r\n        </td>\r\n        <td className=\"align-middle\">\r\n          <img\r\n            src={`/formula1-season-tracker/flags/${driver.Driver.nationality}.png`}\r\n            width=\"32\"\r\n            height=\"32\"\r\n            className=\"flagimg\"\r\n            alt={driver.Driver.nationality}/>\r\n          {`${driver.Driver.givenName} ${driver.Driver.familyName}`}\r\n        </td>\r\n        <td className=\"align-middle\">\r\n          <img\r\n            src={`/formula1-season-tracker/constructors/${driver.Constructors[0].constructorId}.png`}\r\n            width=\"50\"\r\n            height=\"50\"\r\n            alt={driver.Constructors[0].constructorId}/>\r\n        </td>\r\n        <td className=\"align-middle\">{driver.Constructors[0].name}</td>\r\n        <td className=\"align-middle points-column\">{driver.points}</td>\r\n      </tr>\r\n    ));\r\n\r\n    return (\r\n      <>\r\n      {driverStandingsData && driverStandingsData.length > 0 ? (\r\n        <div className=\"container mt-4\">\r\n          <table className=\"table text-light\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Pos.</th>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\">Driver</th>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\">Constructor</th>\r\n                <th scope=\"col\">Points</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {renderDriverStandings}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ):(\r\n        <div className=\"text-center mt-5\">\r\n          <div className=\"spinner-border text-warning\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nfunction Schedule() {\r\n    return (\r\n        <h1>Schedule is under construction</h1>\r\n    );\r\n}\r\n\r\nexport default Schedule;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../Nav.css';\r\n\r\nclass Nav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() { \r\n    const {\r\n      constUri,\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"container-fluid link-nav-bar\">\r\n          <div className=\"row link-nav-bar-row\">\r\n              <Link\r\n                to={`${constUri}`}\r\n                style={{ textDecoration: 'none' }}\r\n                className=\"col-2 bg-warning text-dark text-center\"\r\n              >\r\n                Driver Standings\r\n              </Link>\r\n\r\n              <Link\r\n                to={`${constUri}`}\r\n                style={{ textDecoration: 'none' }}\r\n                className=\"col-2 bg-warning text-dark text-center\"\r\n              >\r\n                Constructor Standings\r\n              </Link>\r\n\r\n              <Link\r\n                to={`${constUri}/schedule`}\r\n                style={{ textDecoration: 'none' }}\r\n                className=\"col-2 bg-warning text-dark text-center\"\r\n              >\r\n                Schedule / Race Results\r\n              </Link>\r\n              <div\r\n                className=\"col-6 bg-dark text-light\"\r\n              >\r\n                UNDER CONSTRUCTION\r\n              </div>\r\n          </div>  \r\n        </div> \r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport Schedule from './components/Schedule';\nimport Nav from './components/Nav';\n\nfunction App() {\n  const appUri = '/formula1-season-tracker';\n\n  return (\n    <>\n      <Router>\n        <Nav constUri={appUri}/> \n        <Switch>\n          <Route path={`${appUri}`} exact component={Home} />\n          <Route path={`${appUri}/schedule`} exact component={Schedule} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}