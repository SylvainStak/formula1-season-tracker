{"version":3,"sources":["components/Home.js","components/Schedule.js","components/Nav.js","components/Constructor.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","state","driverStandingsData","a","axios","get","then","response","setState","data","MRData","StandingsTable","StandingsLists","DriverStandings","this","renderDriverStandings","map","driver","className","position","src","Driver","driverId","width","height","alt","nationality","givenName","familyName","Constructors","constructorId","name","points","wins","length","scope","role","Component","Schedule","Nav","nextRaceData","RaceTable","Races","constUri","to","style","textDecoration","raceName","Circuit","circuitName","date","time","substring","Location","locality","country","Constructor","constructorStandingsData","ConstructorStandings","renderConstructorStandings","constructor","App","appUri","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd3568c0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../Home.css';\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      driverStandingsData: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await axios.get('https://ergast.com/api/f1/current/driverstandings.json')\r\n      .then(response => {\r\n        this.setState({\r\n          driverStandingsData: response.data.MRData.StandingsTable.StandingsLists[0].DriverStandings,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      driverStandingsData,\r\n    } = this.state;\r\n\r\n    {/* RENDER TABLE ROW FOR EACH DRIVER */}\r\n    const renderDriverStandings = driverStandingsData.map(driver => (\r\n      <tr key={driver.Driver.driverId}>\r\n        <td className=\"align-middle\">{driver.position}</td>\r\n        <td className=\"align-middle\">\r\n          <img\r\n            src={`/formula1-season-tracker/drivers/${driver.Driver.driverId}.png`}\r\n            width=\"100\"\r\n            height=\"100\"\r\n            alt={driver.Driver.driverId}/>\r\n        </td>\r\n        <td className=\"align-middle\">\r\n          <img\r\n            src={`/formula1-season-tracker/flags/${driver.Driver.nationality}.png`}\r\n            width=\"32\"\r\n            height=\"32\"\r\n            className=\"flagimg\"\r\n            alt={driver.Driver.nationality}/>\r\n          {`${driver.Driver.givenName} ${driver.Driver.familyName}`}\r\n        </td>\r\n        <td className=\"align-middle\">\r\n          <img\r\n            src={`/formula1-season-tracker/constructors/${driver.Constructors[0].constructorId}.png`}\r\n            width=\"50\"\r\n            height=\"50\"\r\n            alt={driver.Constructors[0].constructorId}/>\r\n        </td>\r\n        <td className=\"align-middle\">{driver.Constructors[0].name}</td>\r\n        <td className=\"align-middle points-column\">{driver.points}</td>\r\n        <td className=\"align-middle points-column\">{driver.wins}</td>\r\n      </tr>\r\n    ));\r\n\r\n    return (\r\n      <>\r\n      {/* RENDER DRIVERS TABLE IF THERE IS AVAILABLE DATA */}\r\n      {driverStandingsData && driverStandingsData.length > 0 ? (\r\n        <>\r\n          <h1\r\n            className=\"text-center text-light mt-2\"\r\n          >\r\n            2021 DRIVER STANDINGS\r\n          </h1>\r\n          <div className=\"container mt-4\">\r\n            <table className=\"table text-light\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Pos.</th>\r\n                  <th scope=\"col\"></th>\r\n                  <th scope=\"col\">Driver</th>\r\n                  <th scope=\"col\"></th>\r\n                  <th scope=\"col\">Constructor</th>\r\n                  <th scope=\"col\">Points</th>\r\n                  <th scope=\"col\">Wins</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {renderDriverStandings}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      ):(\r\n        <>\r\n        {/* LOADING SPINNER */}\r\n          <div className=\"text-center mt-5\">\r\n            <div className=\"spinner-border text-warning\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nfunction Schedule() {\r\n    return (\r\n        <h1 className=\"text-light\">Schedule under construction</h1>\r\n    );\r\n}\r\n\r\nexport default Schedule;","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../Nav.css';\r\n\r\nclass Nav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      nextRaceData: null,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await axios.get('https://ergast.com/api/f1/current/next.json')\r\n      .then(response => {\r\n        this.setState({\r\n          nextRaceData: response.data.MRData.RaceTable.Races[0],\r\n        });\r\n      });\r\n  }\r\n\r\n  render() { \r\n    const {\r\n      constUri,\r\n    } = this.props;\r\n\r\n    const {\r\n      nextRaceData,\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"container-fluid link-nav-bar\">\r\n          <div className=\"row link-nav-bar-row\">\r\n              {/* LINK --> DRIVERS STANDINGS */}\r\n              <Link\r\n                to={`${constUri}`}\r\n                style={{ textDecoration: 'none' }}\r\n                className=\"col-xs-4 col-md-2 bg-warning text-dark text-center\"\r\n              >\r\n                Driver Standings\r\n              </Link>\r\n\r\n              {/* LINK --> CONSTRUCTORS STANDINGS */}\r\n              <Link\r\n                to={`${constUri}/constructor`}\r\n                style={{ textDecoration: 'none' }}\r\n                className=\"col-xs-4 col-md-2 bg-warning text-dark text-center midlink\"\r\n              >\r\n                Constructor Standings\r\n              </Link>\r\n\r\n              {/* LINK --> SCHEDULE / RACE RESULTS */}\r\n              <Link\r\n                to={`${constUri}/schedule`}\r\n                style={{ textDecoration: 'none' }}\r\n                className=\"col-xs-4 col-md-2 bg-warning text-dark text-center\"\r\n              >\r\n                Schedule / Race Results\r\n              </Link>\r\n\r\n              {/* NEXT RACE DATA */}\r\n              <div\r\n                className=\"col-xs-12 col-md-6 bg-dark text-light d-flex justify-content-around\"\r\n              >\r\n                <div className=\"mt-3\">Next Race:</div>  \r\n                {nextRaceData !== null ? \r\n                (\r\n                  <>\r\n                  <div>\r\n                    <div className=\"mt-1\">{`${nextRaceData.raceName}, ${nextRaceData.Circuit.circuitName}`}</div> \r\n                    <div>{`${nextRaceData.date} / ${nextRaceData.time.substring(0,5)} (UTC)`}</div>\r\n                  </div>\r\n                  <div className=\"mt-1\">\r\n                    <div>\r\n                      {`${nextRaceData.Circuit.Location.locality} (${nextRaceData.Circuit.Location.country})`}\r\n                    </div>\r\n                    <div>\r\n                    <img\r\n                      src={`/formula1-season-tracker/flags/scheduleflags/${nextRaceData.Circuit.Location.country}.png`}\r\n                      width=\"50\"\r\n                      height=\"50\"\r\n                      alt={nextRaceData.Circuit.Location.country}/>\r\n                    </div>\r\n                  </div>\r\n                  </>\r\n                ) : \r\n                (\r\n                  <>\r\n                    {/* LOADING SPINNER */}\r\n                    <div className=\"spinner-border text-warning mt-3\" role=\"status\">\r\n                      <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                  </>\r\n                )\r\n                }\r\n              </div>\r\n          </div>  \r\n        </div> \r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Constructor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      constructorStandingsData: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await axios.get('https://ergast.com/api/f1/current/constructorstandings.json')\r\n    .then(response => {\r\n      this.setState({\r\n        constructorStandingsData: response.data.MRData.StandingsTable.StandingsLists[0].ConstructorStandings,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      constructorStandingsData,\r\n    } = this.state;\r\n\r\n    {/* RENDER TABLE ROW FOR EACH CONSTRUCTOR */}\r\n    const renderConstructorStandings = constructorStandingsData.map(constructor => (\r\n      <tr key={constructor.Constructor.constructorId}>\r\n        <td className=\"align-middle\">{constructor.position}</td>\r\n        <td className=\"align-middle\">\r\n          <img\r\n            src={`/formula1-season-tracker/constructors/${constructor.Constructor.constructorId}.png`}\r\n            width=\"50\"\r\n            height=\"50\"\r\n            alt={constructor.Constructor.constructorId}/>\r\n        </td>\r\n        <td className=\"align-middle\">{constructor.Constructor.name}</td>\r\n        <td className=\"align-middle\">\r\n          <img\r\n            src={`/formula1-season-tracker/cars/${constructor.Constructor.constructorId}.png`}\r\n            height=\"50\"\r\n            alt={constructor.Constructor.constructorId}/>\r\n        </td>\r\n        <td className=\"align-middle points-column\">{constructor.points}</td>\r\n        <td className=\"align-middle points-column\">{constructor.wins}</td>\r\n      </tr>\r\n    ));\r\n\r\n    return (\r\n      <>\r\n        {/* RENDER CONSTRUCTORS TABLE IF THERE IS AVAILABLE DATA */}\r\n        {constructorStandingsData && constructorStandingsData.length > 0 ? (\r\n        <>\r\n          <h1\r\n            className=\"text-center text-light mt-2\"\r\n          >\r\n            2021 CONSTRUCTOR STANDINGS\r\n          </h1>\r\n          <div className=\"container mt-4\">\r\n            <table className=\"table text-light\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Pos.</th>\r\n                  <th scope=\"col\"></th>\r\n                  <th scope=\"col\">Constructor</th>\r\n                  <th scope=\"col\"></th>\r\n                  <th scope=\"col\">Points</th>\r\n                  <th scope=\"col\">Wins</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {renderConstructorStandings}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      ):(\r\n        <>\r\n          {/* LOADING SPINNER */}\r\n          <div className=\"text-center mt-5\">\r\n            <div className=\"spinner-border text-warning\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Constructor;","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport Schedule from './components/Schedule';\nimport Nav from './components/Nav';\nimport Constructor from './components/Constructor';\n\nfunction App() {\n  const appUri = '/formula1-season-tracker';\n\n  return (\n    <>\n      <Router>\n        <Nav constUri={appUri}/>\n        <Switch>\n          <Route path={`${appUri}`} exact component={Home} />\n          <Route path={`${appUri}/constructor`} exact component={Constructor} />\n          <Route path={`${appUri}/schedule`} exact component={Schedule} />          \n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}